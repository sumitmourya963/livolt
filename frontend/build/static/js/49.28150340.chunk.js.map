{"version":3,"file":"static/js/49.28150340.chunk.js","mappings":"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","sources":["component/Home/FeaturedProductDetails.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport Carousel from \"react-material-ui-carousel\";\nimport \"./FeaturedProductDetails.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  clearErrors,\n  getFeaturedProduct,\n  newReview,\n} from \"../../actions/productAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\nimport { addItemsToCart } from \"../../actions/cartAction\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n} from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport { NEW_REVIEW_RESET } from \"../../constants/productConstants\";\n\nconst FeaturedProductDetails = ({ cnt }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const { products, loading, error } = useSelector(\n    (state) => state.featuredProduct\n  );\n  const { success, error: reviewError } = useSelector(\n    (state) => state.newReview\n  );\n\n  //formatter for formating the price in indian Number system\n\n  const formatPrice = (price) => {\n    const formatter = new Intl.NumberFormat(\"en-IN\"); // Using 'en-IN' for Indian number formatting\n\n    return `${formatter.format(price)}`;\n  };\n\n  const options = {\n    size: \"large\",\n    value: products[cnt]?.ratings,\n    readOnly: true,\n    name: \"rating-button\",\n    precision: 0.5,\n  };\n\n  const [quantity, setQuantity] = useState(1);\n  const [open, setOpen] = useState(false);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const increaseQuantity = () => {\n    if (products[cnt].Stock <= quantity) return;\n\n    const qty = quantity + 1;\n    setQuantity(qty);\n  };\n\n  const decreaseQuantity = () => {\n    if (1 >= quantity) return;\n\n    const qty = quantity - 1;\n    setQuantity(qty);\n  };\n\n  const addToCartHandler = () => {\n    dispatch(addItemsToCart(products[cnt]?._id, quantity));\n    alert.success(\"Item Added To Cart\");\n  };\n\n  const submitReviewToggle = () => {\n    open ? setOpen(false) : setOpen(true);\n  };\n\n  const reviewSubmitHandler = () => {\n    const myForm = new FormData();\n\n    myForm.set(\"rating\", rating);\n    myForm.set(\"comment\", comment);\n    myForm.set(\"productId\", products[cnt]?._id);\n\n    dispatch(newReview(myForm));\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (reviewError) {\n      alert.error(reviewError);\n      dispatch(clearErrors());\n    }\n    if (success) {\n      alert.success(\"Review Submitted Successfully\");\n      dispatch({ type: NEW_REVIEW_RESET });\n    }\n    dispatch(getFeaturedProduct());\n  }, [dispatch, alert, reviewError, success, error]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <div className=\"ProductDetails1\">\n            <div>\n              <Carousel>\n                {products[cnt]?.images &&\n                  products[cnt]?.images.map((item, i) => (\n                    <img\n                      className=\"CarouselImage\"\n                      key={i}\n                      src={item.url}\n                      alt={`${i} Slide`}\n                    />\n                  ))}\n              </Carousel>\n            </div>\n\n            <div>\n              <div className=\"detailsBlock-1\">\n                <h2>{products[cnt]?.name}</h2>\n                <p>Product # {products[cnt]?._id}</p>\n              </div>\n              <div className=\"detailsBlock-2\">\n                <Rating {...options} />\n                <span className=\"detailsBlock-2-span\">\n                  {\" \"}\n                  ({products[cnt]?.numOfReviews} Reviews)\n                </span>\n              </div>\n              <div className=\"detailsBlock-3\">\n                <h1>{`â‚¹${formatPrice(products[cnt]?.price)}`}</h1>\n                <div className=\"detailsBlock-3-1\">\n                  <div className=\"detailsBlock-3-1-1\">\n                    <button onClick={decreaseQuantity}>-</button>\n                    <input readOnly type=\"number\" value={quantity} />\n                    <button onClick={increaseQuantity}>+</button>\n                  </div>\n                  <button\n                    disabled={products[cnt]?.Stock < 1 ? true : false}\n                    onClick={addToCartHandler}\n                  >\n                    Add to Cart\n                  </button>\n                </div>\n\n                <p>\n                  Status:\n                  <b\n                    className={\n                      products[cnt]?.Stock < 1 ? \"redColor\" : \"greenColor\"\n                    }\n                  >\n                    {products[cnt]?.Stock < 1 ? \"OutOfStock\" : \"InStock\"}\n                  </b>\n                </p>\n              </div>\n\n              <div className=\"detailsBlock-4\">\n                Description : <p>{products[cnt]?.description}</p>\n              </div>\n\n              <button onClick={submitReviewToggle} className=\"submitReview\">\n                Submit Review\n              </button>\n            </div>\n          </div>\n          <Dialog\n            aria-labelledby=\"simple-dialog-title\"\n            open={open}\n            onClose={submitReviewToggle}\n          >\n            <DialogTitle>Submit Review</DialogTitle>\n            <DialogContent className=\"submitDialog\">\n              <Rating\n                onChange={(e) => setRating(e.target.value)}\n                value={rating}\n                size=\"large\"\n              />\n\n              <textarea\n                className=\"submitDialogTextArea\"\n                cols=\"30\"\n                rows=\"5\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n              ></textarea>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={submitReviewToggle} color=\"secondary\">\n                Cancel\n              </Button>\n              <Button onClick={reviewSubmitHandler} color=\"primary\">\n                Submit\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default FeaturedProductDetails;\n"],"names":["_ref","_products$cnt","_products$cnt4","_products$cnt5","_products$cnt6","_products$cnt7","_products$cnt8","_products$cnt9","_products$cnt10","_products$cnt11","_products$cnt12","_products$cnt13","cnt","dispatch","useDispatch","alert","useAlert","_useSelector","useSelector","state","featuredProduct","products","loading","error","_useSelector2","newReview","success","reviewError","options","size","value","ratings","readOnly","name","precision","_useState","useState","_useState2","_slicedToArray","quantity","setQuantity","_useState3","_useState4","open","setOpen","_useState5","_useState6","rating","setRating","_useState7","_useState8","comment","setComment","submitReviewToggle","useEffect","clearErrors","type","NEW_REVIEW_RESET","getFeaturedProduct","_jsx","Fragment","children","Loader","_jsxs","className","Carousel","images","map","item","i","src","url","alt","concat","_id","Rating","_objectSpread","numOfReviews","price","formatter","Intl","NumberFormat","format","formatPrice","onClick","Stock","disabled","_products$cnt2","addItemsToCart","description","Dialog","onClose","DialogTitle","DialogContent","onChange","e","target","cols","rows","DialogActions","Button","color","_products$cnt3","myForm","FormData","set"],"sourceRoot":""}